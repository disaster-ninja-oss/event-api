<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.kontur.eventapi.dao.mapper.FeedMapper">

    <select id="getFeeds" resultMap="feedDtoMap">
        select *
        from feeds
    </select>

    <insert id="insertFeedData" useGeneratedKeys="false">
        insert into feed_data (event_id, feed_id, version, name, description, started_at, ended_at, updated_at, updated_by_source_at, observations, episodes)
        values (#{eventId}, #{feedId}, #{version}, #{name}, #{description}, #{startedAt}, #{endedAt}, #{updatedAt}, #{updatedBySourceAt},
                #{observations, typeHandler=io.kontur.eventapi.typehandler.UUIDArrayTypeHandler}, #{episodes}::jsonb)
    </insert>

    <select id="searchForEvents" resultMap="feedDataDtoMap">
        WITH feed as (
            SELECT feed_id
            FROM feeds
            WHERE alias = #{feedAlias})
        SELECT *
        FROM feed_data fd,
            feed f,
            (SELECT event_id, max(version) as version
             FROM feed_data fd2,
                 feed f
             WHERE fd2.feed_id = f.feed_id
             GROUP BY event_id) t
        WHERE fd.event_id = t.event_id
          AND fd.version = t.version
          AND fd.feed_id = f.feed_id
          <if test='after != null'>
            AND updated_by_source_at > #{after}
          </if>
        ORDER BY updated_by_source_at
        LIMIT #{limit} OFFSET #{offset};
    </select>

    <select id="getFeedDataByUpdatedAt" resultMap="feedDataDtoMap">
        SELECT *
        FROM feed_data
        WHERE updated_at = #{updatedAt}
        LIMIT 1
    </select>


    <resultMap id="feedDtoMap" type="io.kontur.eventapi.entity.Feed">
        <result property="feedId" column="feed_id" />
        <result property="description" column="description"/>
        <result property="alias" column="alias"/>
        <result property="providers" column="providers" typeHandler="io.kontur.eventapi.typehandler.StringArrayTypeHandler"/>
        <result property="roles" column="roles" typeHandler="io.kontur.eventapi.typehandler.StringArrayTypeHandler"/>
    </resultMap>

    <resultMap id="feedDataDtoMap" type="io.kontur.eventapi.entity.FeedData">
        <result property="eventId" column="event_id" />
        <result property="feedId" column="feed_id" />
        <result property="version" column="version" />
        <result property="name" column="name" />
        <result property="description" column="description" />
        <result property="startedAt" column="started_at" />
        <result property="endedAt" column="ended_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="updatedBySourceAt" column="updated_by_source_at" />
        <result property="observations" column="observations" typeHandler="io.kontur.eventapi.typehandler.UUIDArrayTypeHandler" />
        <result property="episodes" column="episodes" typeHandler="io.kontur.eventapi.typehandler.FeedEpisodeTypeHandler"/>
    </resultMap>
</mapper>